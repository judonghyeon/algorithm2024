import random
import time
#이진 탐색 반복구조
def binary_s_loop(A, key, low, high):
    while(low<=high):
        mid=(low+high)//2
        if key==A[mid]:
            return mid
        elif key>A[mid]:
            low = mid+1
        else:
            high = mid-1
    return -1

def sequential_search(A, key):
    for i in range(len(A)):
        if A[i] == key:
            return i
    return -1

listA = [random.randint(1, 1000000) for _ in range(1000000)]
listA.sort()  # 이진 탐색을 위해 데이터 정렬

start_time = time.time()
print("54 탐색(순차) --> ", sequential_search(listA, 54))
end_time = time.time()
print("54 탐색(순차) --> 시간: {:.10f}초".format(end_time - start_time))

start_time = time.time()
print("54 탐색(반복) --> ", binary_s_loop(listA, 54, 0, len(listA)-1))
end_time = time.time()
print("54 탐색(반복) --> 시간: {:.1000f}초".format(end_time - start_time))

# 최악일 경우 약 순차 탐색이 이진 탐색보다 약 222.8배 느리다.(제 컴퓨터 스펙으로)